<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script type="text/javascript" src="/public/jquery/jquery-1.6.4.min.js"></script>
<script type="text/javascript">

function funminimize(){
  $.get('/app/ScannerModule/FunMinimize', {});
   return false;  
}

function enablescn1(){
  $.get('/app/ScannerModule/enableSCN1', {});
   return false;  
}

function enablescn2(){
  $.get('/app/ScannerModule/enableSCN2', {});
   return false;  
}

function enableall(){
  $.get('/app/ScannerModule/enableAll', {});
   return false;  
}

function disableall(){
  $.get('/app/ScannerModule/disableAll', {});
   return false;  
}

function registerdecodeevent() {
  document.getElementById("myResult").innerHTML="";
  var selectdecodeevent=document.getElementById("selectdecodeevent").value;
  $.get('/app/ScannerModule/registerdecodeevent', { selectdecodeevent:  selectdecodeevent});
  return false;
}

function registerenumevent()
{
   document.getElementById("myResult").innerHTML="";
   var selectevent=document.getElementById("selectevent").value;
   $.get('/app/ScannerModule/registerenumevent', { selectevent:  selectevent});
   return false;  
}

function enumeratescanner()
{
  $.get('/app/ScannerModule/enumeratescanner', { });
  return false; 
  
}


function enablescanner()
{
  $.get('/app/ScannerModule/enablescanner', { });
  return false; 
  
}

function disablescanner()
{
  $.get('/app/ScannerModule/disablescanner', { });
  return false; 
  
}

function startscanner()
{
  $.get('/app/ScannerModule/startscanner', { });
  return false; 
  
}


function stopscanner()
{
  $.get('/app/ScannerModule/stopscanner', { });
  return false; 
  
}

function enableselectedscanner()
{
   document.getElementById("myResult").innerHTML="";
   var selectscanner=document.getElementById("selectscanner").value;
   $.get('/app/ScannerModule/enableselectedscanner', { selectscanner:  selectscanner});
   return false;  
}

function registerbluetoothstatusevent()
{
   document.getElementById("myResult").innerHTML="";
   var selectbtevent=document.getElementById("selectbtevent").value;
   $.get('/app/ScannerModule/registerbluetoothstatusevent', { selectbtevent:  selectbtevent});
   return false;  
}

function setautoenter()
{
   var selectautoenter=document.getElementById("selectautoenter").value;
   $.get('/app/ScannerModule/setautoenter', { selectautoenter:  selectautoenter});
   return false;  
}

function setautotab()
{
   var selectautotab=document.getElementById("selectautotab").value;
   $.get('/app/ScannerModule/setautotab', { selectautotab:  selectautotab});
   return false;  
}

function setlinearsecuritylevel()
{
   var selectlinearsecuritylevel=document.getElementById("selectlinearsecuritylevel").value;
   $.get('/app/ScannerModule/setlinearsecuritylevel', { selectlinearsecuritylevel:  selectlinearsecuritylevel});
   return false;  
}

function setscantimeout()
{
   var txtscantimeout=document.getElementById("txtscantimeout").value;
   $.get('/app/ScannerModule/setscantimeout', { txtscantimeout:  txtscantimeout});
   return false;  
}

function setrastermode()
{
   var selectrastermode=document.getElementById("selectrastermode").value;
   $.get('/app/ScannerModule/setrastermode', { selectrastermode:  selectrastermode});
   return false;  
}

function setrasterheight()
{
   var txtrasterheight=document.getElementById("txtrasterheight").value;
   $.get('/app/ScannerModule/setrasterheight', { txtrasterheight:  txtrasterheight});
   return false;  
}

function setaimtype()
{
   var selectaimtype=document.getElementById("selectaimtype").value;
   $.get('/app/ScannerModule/setaimtype', { selectaimtype:  selectaimtype});
   return false;  
}

function settimedaimduration()
{
   var txttimedaimduration=document.getElementById("txttimedaimduration").value;
   $.get('/app/ScannerModule/settimedaimduration', { txttimedaimduration:  txttimedaimduration});
   return false;  
}


function setsamesymboltimeout()
{
   var txtsamesymboltimeout=document.getElementById("txtsamesymboltimeout").value;
   $.get('/app/ScannerModule/setsamesymboltimeout', { txtsamesymboltimeout:  txtsamesymboltimeout});
   return false;  
}


function setdifferentsymboltimeout()
{
   var txtdifferentsymboltimeout=document.getElementById("txtdifferentsymboltimeout").value;
   $.get('/app/ScannerModule/setdifferentsymboltimeout', { txtdifferentsymboltimeout:  txtdifferentsymboltimeout});
   return false;  
}


function setaimmode()
{
   var selectaimmode=document.getElementById("selectaimmode").value;
   $.get('/app/ScannerModule/setaimmode', { selectaimmode:  selectaimmode});
   return false;  
}


function setpicklistmode()
{
   var selectpicklistmode=document.getElementById("selectpicklistmode").value;
   $.get('/app/ScannerModule/setpicklistmode', { selectpicklistmode:  selectpicklistmode});
   return false;  
}

function setviewfindermode()
{
   var selectviewfindermode=document.getElementById("selectviewfindermode").value;
   $.get('/app/ScannerModule/setviewfindermode', { selectviewfindermode:  selectviewfindermode});
   return false;  
}

function setviewfinderx()
{
   var txtviewfinderx=document.getElementById("txtviewfinderx").value;
   $.get('/app/ScannerModule/setviewfinderx', { txtviewfinderx:  txtviewfinderx});
   return false;  
}

function setviewfindery()
{
   var txtviewfindery=document.getElementById("txtviewfindery").value;
   $.get('/app/ScannerModule/setviewfindery', { txtviewfindery:  txtviewfindery});
   return false;  
}

function setviewfinderwidth()
{
   var txtviewfinderwidth=document.getElementById("txtviewfinderwidth").value;
   $.get('/app/ScannerModule/setviewfinderwidth', { txtviewfinderwidth:  txtviewfinderwidth});
   return false;  
}

function setviewfinderheight()
{
   var txtviewfinderheight=document.getElementById("txtviewfinderheight").value;
   $.get('/app/ScannerModule/setviewfinderheight', { txtviewfinderheight:  txtviewfinderheight});
   return false;  
}

function setviewfinderfeedback()
{
   var selectviewfinderfeedback=document.getElementById("selectviewfinderfeedback").value;
   $.get('/app/ScannerModule/setviewfinderfeedback', { selectviewfinderfeedback:  selectviewfinderfeedback});
   return false;  
}

function setviewfinderfeedbacktime()
{
   var txtviewfinderfeedbacktime=document.getElementById("txtviewfinderfeedbacktime").value;
   $.get('/app/ScannerModule/setviewfinderfeedbacktime', { txtviewfinderfeedbacktime:  txtviewfinderfeedbacktime});
   return false;  
}

function setfocusmode()
{
   var selectfocusMode=document.getElementById("selectfocusMode").value;
   $.get('/app/ScannerModule/setfocusmode', { selectfocusMode:  selectfocusMode});
   return false;  
}

function setilluminationmode()
{
   var selectilluminationmode=document.getElementById("selectilluminationmode").value;
   $.get('/app/ScannerModule/setilluminationmode', { selectilluminationmode:  selectilluminationmode});
   return false;  
}

function setdpmmode()
{
   var selectdpmmode=document.getElementById("selectdpmmode").value;
   $.get('/app/ScannerModule/setdpmmode', { selectdpmmode:  selectdpmmode});
   return false;  
}

function setinverse1dmode()
{
   var selectinverse1dmode=document.getElementById("selectinverse1dmode").value;
   $.get('/app/ScannerModule/setinverse1dmode', { selectinverse1dmode:  selectinverse1dmode});
   return false;  
}

function setpoorquality1dmode()
{
   var selectpoorquality1dmode=document.getElementById("selectpoorquality1dmode").value;
   $.get('/app/ScannerModule/setpoorquality1dmode', { selectpoorquality1dmode:  selectpoorquality1dmode});
   return false;  
}

function setnarrowbeam()
{
   var selectnarrowbeam=document.getElementById("selectnarrowbeam").value;
   $.get('/app/ScannerModule/setnarrowbeam', { selectnarrowbeam:  selectnarrowbeam});
   return false;  
}

function setdbpmode()
{
   var selectdbpmode=document.getElementById("selectdbpmode").value;
   $.get('/app/ScannerModule/setdbpmode', { selectdbpmode:  selectdbpmode});
   return false;  
}

function setklasseeins()
{
   var selectklasseeins=document.getElementById("selectklasseeins").value;
   $.get('/app/ScannerModule/setklasseeins', { selectklasseeins:  selectklasseeins});
   return false;  
}

function setadaptivescanning()
{
   var selectadaptivescanning=document.getElementById("selectadaptivescanning").value;
   $.get('/app/ScannerModule/setadaptivescanning', { selectadaptivescanning:  selectadaptivescanning});
   return false;  
}

function setbidirectionalredundancy()
{
   var selectbidirectionalredundancy=document.getElementById("selectbidirectionalredundancy").value;
   $.get('/app/ScannerModule/setbidirectionalredundancy', { selectbidirectionalredundancy:  selectbidirectionalredundancy});
   return false;  
}

function setbeamWidth()
{
   var txtbeamWidth=document.getElementById("txtbeamWidth").value;
   $.get('/app/ScannerModule/setbeamWidth', { txtbeamWidth:  txtbeamWidth});
   return false;  
}

function setconnectionidletimeout()
{
   var txtconnectionidletimeout=document.getElementById("txtconnectionidletimeout").value;
   $.get('/app/ScannerModule/setconnectionidletimeout', { txtconnectionidletimeout:  txtconnectionidletimeout});
   return false;  
}

function setdisconnectbtondisable()
{
   var selectdisconnectbtondisable=document.getElementById("selectdisconnectbtondisable").value;
   $.get('/app/ScannerModule/setdisconnectbtondisable', { selectdisconnectbtondisable:  selectdisconnectbtondisable});
   return false;  
}

function SetdisplayBtAddressBarcodeOnEnable()
{
   var selectBtAddressBarcodeOnEnable=document.getElementById("selectBtAddressBarcodeOnEnable").value;
   $.get('/app/ScannerModule/SetdisplayBtAddressBarcodeOnEnable', { selectBtAddressBarcodeOnEnable:  selectBtAddressBarcodeOnEnable});
   return false;  
}

function setenableTimeout()
{
  var txtenableTimeout=document.getElementById("txtenableTimeout").value;
   $.get('/app/ScannerModule/SetenableTimeout', { txtenableTimeout:  txtenableTimeout});
   return false;  
}

function setbarcodeDataFormat()
{
   var selectbarcodeDataFormat=document.getElementById("selectbarcodeDataFormat").value;
   $.get('/app/ScannerModule/SetbarcodeDataFormat', { selectbarcodeDataFormat:  selectbarcodeDataFormat});
   return false;  
}

function setdataBufferSize()
{
  var txtdataBufferSize=document.getElementById("txtdataBufferSize").value;
   $.get('/app/ScannerModule/SetdataBufferSize', { txtdataBufferSize:  txtdataBufferSize});
   return false;  
}

function setAllDecoders()
{
   var selectSetAllDecoders=document.getElementById("selectSetAllDecoders").value;
   $.get('/app/ScannerModule/SetAllDecoders', { selectSetAllDecoders:  selectSetAllDecoders});
   return false;  
}

function enableSignature()
{
   var selectEnablesignature=document.getElementById("selectEnablesignature").value;
   $.get('/app/ScannerModule/EnableSignature', { selectEnablesignature:  selectEnablesignature});
   return false;  
}

function setsignatureImageHeight()
{
  var txtsignatureImageHeight=document.getElementById("txtsignatureImageHeight").value;
   $.get('/app/ScannerModule/SetsignatureImageHeight', { txtsignatureImageHeight:  txtsignatureImageHeight});
   return false;  
}

function setsignatureImageWidth()
{
  var txtsignatureImageWidth=document.getElementById("txtsignatureImageWidth").value;
   $.get('/app/ScannerModule/SetsignatureImageWidth', { txtsignatureImageWidth:  txtsignatureImageWidth});
   return false;  
}

function setsignatureImageQuality()
{
  var txtsignatureImageQuality=document.getElementById("txtsignatureImageQuality").value;
   $.get('/app/ScannerModule/SetsignatureImageQuality', { txtsignatureImageQuality:  txtsignatureImageQuality});
   return false;  
}


function setFieldValue(returnval) 
{
  document.getElementById("myResult").innerHTML=returnval;
}

</script>
</head>

<body>
<p>ScannerTest</p>
<br /><br />
<div id="myResult">Scanner info</div> 
<br /><br />
  <div id="SignatureBarcode">Signature Bracode goes here</div>
<img src="<%=$data_return1%>" id="mycapturedSig" ></img>
<br>
<form name="myfrm" action="">

<INPUT type="button" value="minimizeApp" name="minimizeApp" onClick="funminimize();"> 
<br/>
<INPUT type="button" value="EnableSCN1" name="Enablescn1" onClick="enablescn1();"> 
<INPUT type="button" value="EnableSCN2" name="Enablescn2" onClick="enablescn2();"> 
<br /> 
<INPUT type="button" value="EnableAllDecoders" name="EnableAll" onClick="enableall();"> 
<INPUT type="button" value="DisableAllDecoders" name="DisableAll" onClick="disableall();"> 
<br />

 <label for="selectdecodeevent">Select event type</label>
  <select name="selectdecodeevent" id="selectdecodeevent">
  <option value="JavaScript">JavaScript</option>
  <option value="DETACHEVENT">DETACHEVENT</option>
  <option value="EMPTYEVENT">EMPTYEVENT</option>
  </select>
<br />
<INPUT type="button" value="RegisterDecodeEvent" name="RegisterDecodeEvent" onClick="registerdecodeevent();"> 
<br />
    
    
 <label for="selectevent">Select event type</label>
      <select name="selectevent" id="selectevent">
      <option value="JavaScript">JavaScript</option>
      <option value="DETACHEVENT">DETACHEVENT</option>
      <option value="EMPTYEVENT">EMPTYEVENT</option>
      </select>
  <br />  <br />
  
        
<INPUT type="button" value="RegisterEnumEvent" name="RegisterEnumEvent" onClick="registerenumevent();"> 
 <INPUT type="button" value="Enumerate" name="Enumerate" onClick="enumeratescanner();"> 
  <br />
 <INPUT type="button" value="Enable" name="Enable" onClick="enablescanner();"> 
 <INPUT type="button" value="Disable" name="Disable" onClick="disablescanner();"> 
  <br />
 <INPUT type="button" value="Start" name="Start" onClick="startscanner();">  
 <INPUT type="button" value="Stop" name="Stop" onClick="stopscanner();">    
  <br />
  <label for="selectscanner">Select Scanner</label>
  <select id="selectscanner" name="selectscanner">
            <% if $scanners %>
            <% $scanners.each do |scan| %>
            <option value='<%= scan['deviceName'] %>'><%= scan['deviceName']+scan['friendlyName'] %></option>
         <% end %>
         <% end %>
       <option value="TEST">INVALIDSTRING</option>
      <option value="">EMPTYSTRING</option>   
   </select>
  <br />   
<INPUT type="button" value="ENABLED selected scanner" name="ENABLED selected scanner" onClick="enableselectedscanner();">  
  <br />
  <label for="selectbtevent">Select event type</label>
  <select name="selectbtevent" id="selectbtevent">
  <option value="JavaScript">JavaScript</option>
  <option value="DETACHEVENT">DETACHEVENT</option>
  <option value="EMPTYEVENT">EMPTYEVENT</option>
  </select>
  <br />
<INPUT type="button" value="RegisterBTStatusEvent" name="RegisterBTStatusEvent" onClick="registerbluetoothstatusevent();">    
  <br />
  <label for="selectautoenter">Select AutoEnter Value</label>
  <select name="selectautoenter" id="selectautoenter">
  <option value="enabled">enabled</option>
  <option value="disabled">disabled</option>
  <option value="TEST">INVALIDSTRING</option>
  <option value="">EMPTYSTRING</option>
  </select>  <br />
<Textarea id="txtInput" cols="15" rows="2"></Textarea><br/>
<Textarea id="txtInput" cols="10" rows="2"></Textarea>
<INPUT type="button" value="SetAutoEnterValue" name="SetAutoEnterValue" onClick="setautoenter();">     
  <br />
<label for="selectautotab">Select AutoTab Value</label>
  <select name="selectautotab" id="selectautotab">
  <option value="enabled">enabled</option>
  <option value="disabled">disabled</option>
  <option value="TEST">INVALIDSTRING</option>
  <option value="">EMPTYSTRING</option>
  </select>  <br />
 <INPUT type="button" value="SetAutoTabValue" name="SetAutoTabValue" onClick="setautotab();">  
  <br />
  <label for="selectlinearsecuritylevel">Select linearsecuritylevel Value</label>
  <select name="selectlinearsecuritylevel" id="selectlinearsecuritylevel">
  <option value="redundancyAndLength">redundancyAndLength</option>
  <option value="shortOrCodabar">shortOrCodabar</option>
  <option value="longAndShort">longAndShort</option>
  <option value="allTwice">allTwice</option>
  <option value="allThrice">allThrice</option>
  <option value="TEST">INVALIDSTRING</option>
  <option value="">EMPTYSTRING</option>
  </select>  <br />
<INPUT type="button" value="Setlinearsecuritylevel" name="Setlinearsecuritylevel" onClick="setlinearsecuritylevel();">  
  <br />
    <label for="txtscantimeout" class="itemLabel">scantimeout</label>
    <input type="text" id="txtscantimeout" name="txtscantimeout" class="itemValue"  />  
    <INPUT type="button" value="SetScanTimeOut" name="SetScanTimeOut" onClick="setscantimeout();">  
      <br />

      <label for="selectrastermode">Select rastermode</label>
      <select name="selectrastermode" id="selectrastermode">
      <option value="none">none</option>
      <option value="openAlways">openAlways</option>
      <option value="smart">smart</option>
      <option value="cyclone">cyclone</option>
      <option value="TEST">INVALIDSTRING</option>
      <option value="">EMPTYSTRING</option>
      </select>      <br />

      <INPUT type="button" value="SetRasterMode" name="SetRasterMode" onClick="setrastermode();">  
      <br />
    <label for="txtrasterheight" class="itemLabel">rasterheight</label>
    <input type="text" id="txtrasterheight" name="txtrasterheight" class="itemValue"  />
   <INPUT type="button" value="SetRasterHeight" name="SetRasterHeight" onClick="setrasterheight();">  
      <br />

      <label for="selectaimtype">Select aimtype</label>
      <select name="selectaimtype" id="selectaimtype">
      <option value="trigger">trigger</option>
      <option value="timedHold">timedHold</option>
      <option value="timedRelease">timedRelease</option>
      <option value="presentation">presentation</option>
      <option value="pressAndRelease">pressAndRelease</option>
      <option value="continuousRead">continuousRead</option>
      <option value="TEST">INVALIDSTRING</option>
      <option value="">EMPTYSTRING</option>
      </select>      <br />  
      <INPUT type="button" value="SetAimType" name="SetAimType" onClick="setaimtype();"> 
      <br />
      
    <label for="txttimedaimduration" class="itemLabel">timedaimduration</label>
    <input type="text" id="txttimedaimduration" name="txttimedaimduration" class="itemValue"  />
      <INPUT type="button" value="SetTimedAimDuration" name="SetTimedAimDuration" onClick="settimedaimduration();"> 
      <br />
    <label for="txtsamesymboltimeout" class="itemLabel">samesymboltimeout</label>
    <input type="text" id="txtsamesymboltimeout" name="txtsamesymboltimeout" class="itemValue"  />
   <INPUT type="button" value="SetSameSymbolTimeout" name="SetSameSymbolTimeout" onClick="setsamesymboltimeout();"> 
   <br />
  <label for="txtdifferentsymboltimeout" class="itemLabel">differentsymboltimeout</label>
  <input type="text" id="txtdifferentsymboltimeout" name="txtdifferentsymboltimeout" class="itemValue"  />
  <INPUT type="button" value="SetDifferentSymbolTimeout" name="SetDifferentSymbolTimeout" onClick="setdifferentsymboltimeout();"> 
    <br />
         <label for="selectaimmode">Select aimmode</label>
         <select name="selectaimmode" id="selectaimmode">
         <option value="none">none</option>
         <option value="dot">dot</option>
         <option value="slab">slab</option>
         <option value="reticle">reticle</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select>     <br />
    <INPUT type="button" value="SetAimMode" name="SetAimMode" onClick="setaimmode();"> 
    <br />
         <label for="selectpicklistmode">Select picklistmode</label>
         <select name="selectpicklistmode" id="selectpicklistmode">
         <option value="disabled">disabled</option>
         <option value="hardwareReticle">hardwareReticle</option>
         <option value="softwareReticle">softwareReticle</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select>    <br />
    <INPUT type="button" value="SetPicklistMode" name="SetPicklistMode" onClick="setpicklistmode();"> 
    <br />
         <label for="selectviewfindermode">Select viewfindermode</label>
         <select name="selectviewfindermode" id="selectviewfindermode">
         <option value="enabled">enabled</option>
         <option value="disabled">disabled</option>
         <option value="staticReticle">staticReticle</option>
         <option value="dynamicReticle">dynamicReticle</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select><br />
    <INPUT type="button" value="SetViewFinderMode" name="SetViewFinderMode" onClick="setviewfindermode();">   
    <br />
  <label for="txtviewfinderx" class="itemLabel">viewfinderx</label>
       <input type="text" id="txtviewfinderx" name="txtviewfinderx" class="itemValue"  />
         <INPUT type="button" value="SetViewfinderX" name="SetViewfinderX" onClick="setviewfinderx();">   
         <br />

       <label for="txtviewfindery" class="itemLabel">viewfinderx</label>
       <input type="text" id="txtviewfindery" name="txtviewfindery" class="itemValue"  />
         <INPUT type="button" value="SetViewfinderY" name="SetViewfinderY" onClick="setviewfindery();">  
         <br />
         
       <label for="txtviewfinderwidth" class="itemLabel">viewfinderwidth</label>
       <input type="text" id="txtviewfinderwidth" name="txtviewfinderwidth" class="itemValue"  />
         <INPUT type="button" value="SetViewfinderWidth" name="SetViewfinderWidth" onClick="setviewfinderwidth();">  
         <br />

       <label for="txtviewfinderheight" class="itemLabel">viewfinderheight</label>
       <input type="text" id="txtviewfinderheight" name="txtviewfinderheight" class="itemValue"  />
       <INPUT type="button" value="SetViewfinderHeight" name="SetViewfinderHeight" onClick="setviewfinderheight();"> 
         <br />


         <label for="selectviewfinderfeedback">Select viewfinderfeedback</label>
         <select name="selectviewfinderfeedback" id="selectviewfinderfeedback">
         <option value="enabled">enabled</option>
         <option value="disabled">disabled</option>
         <option value="reticle">reticle</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select> <br />
         <INPUT type="button" value="SetViewFinderFeedback" name="SetViewFinderFeedback" onClick="setviewfinderfeedback();"> 
         <br />
         
       <label for="txtviewfinderfeedbacktime" class="itemLabel">viewfinderfeedbacktime</label>
       <input type="text" id="txtviewfinderfeedbacktime" name="txtviewfinderfeedbacktime" class="itemValue"  />
         <INPUT type="button" value="SetViewfinderfFeedbackTime" name="SetViewfinderfFeedbackTime" onClick="setviewfinderfeedbacktime();"> 
         <br />
         
         <label for="selectfocusmode">Select focusmode</label>
         <select name="selectfocusmode" id="selectfocusMode">
         <option value="fixed">fixed</option>
         <option value="auto">auto</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select>  <br />
         <INPUT type="button" value="SetFocusMode" name="SetFocusMode" onClick="setfocusmode();"> 
         <br />

         <label for="selectilluminationmode">Select IlluminationMode</label>
         <select name="selectilluminationmode" id="selectilluminationmode">
         <option value="auto">auto</option>
         <option value="alwaysOn">alwaysOn</option>
         <option value="alwaysOff">alwaysOff</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select>     <br />
         <INPUT type="button" value="SetIlluminationmode" name="SetIlluminationmode" onClick="setilluminationmode();"> 
         <br />
         
         <label for="selectdpmmode">Select dpmMode</label>
         <select name="selectdpmmode" id="selectdpmmode">
         <option value="true">true</option>
         <option value="false">false</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select>        <br />
         <INPUT type="button" value="SetDPMMode" name="SetDPMMode" onClick="setdpmmode();"> 
         <br />
        
         <label for="selectinverse1dmode">Select inverse1dmode</label>
         <select name="selectinverse1dmode" id="selectinverse1dmode">
         <option value="auto">auto</option>
         <option value="enabled">enabled</option>
         <option value="disabled">disabled</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select>  <br />
         <INPUT type="button" value="SetInverse1dMode" name="SetInverse1dMode" onClick="setinverse1dmode();"> 
         <br />

         <label for="selectpoorquality1dmode">Select poorquality1dmode</label>
         <select name="selectpoorquality1dmode" id="selectpoorquality1dmode">
         <option value="true">true</option>
         <option value="false">false</option>
         <option value="TEST">INVALIDSTRING</option>
         <option value="">EMPTYSTRING</option>
         </select> <br />  
         <INPUT type="button" value="SetPoorQuality1dMode" name="SetPoorQuality1dMode" onClick="setpoorquality1dmode();"> 
         <br />
         
     <label for="selectnarrowbeam">Select narrowbeam</label>
     <select name="selectnarrowbeam" id="selectnarrowbeam">
     <option value="true">true</option>
     <option value="false">false</option>
     <option value="TEST">INVALIDSTRING</option>
     <option value="">EMPTYSTRING</option>
     </select> <br />
    <INPUT type="button" value="SetNarrowBeam" name="SetNarrowBeam" onClick="setnarrowbeam();"> 
     <br />

     <label for="selectdbpmode">Select dbpmode</label>
     <select name="selectdbpmode" id="selectdbpmode">
     <option value="normal">normal</option>
     <option value="composite">composite</option>
     <option value="TEST">INVALIDSTRING</option>
     <option value="">EMPTYSTRING</option>
     </select>   <br />
    <INPUT type="button" value="Setdbpmode" name="Setdbpmode" onClick="setdbpmode();"> 
    <br />

     <label for="selectklasseeins">Select klasseeins</label>
     <select name="selectklasseeins" id="selectklasseeins">
     <option value="true">true</option>
     <option value="false">false</option>
     <option value="TEST">INVALIDSTRING</option>
     <option value="">EMPTYSTRING</option>
     </select>   <br />
         <INPUT type="button" value="SetKlasseEins" name="SetKlasseEins" onClick="setklasseeins();"> 
         <br />
     
     <label for="selectadaptivescanning">Select adaptivescanning</label>
     <select name="selectadaptivescanning" id="selectadaptivescanning">
     <option value="true">true</option>
     <option value="false">false</option>
     <option value="TEST">INVALIDSTRING</option>
     <option value="">EMPTYSTRING</option>
     </select>         <br />
         <INPUT type="button" value="SetAdaptiveScanning" name="SetAdaptiveScanning" onClick="setadaptivescanning();"> 
         <br />

     <label for="selectbidirectionalredundancy">Select bidirectionalredundancy</label>
     <select name="selectbidirectionalredundancy" id="selectbidirectionalredundancy">
     <option value="true">true</option>
     <option value="false">false</option>
     <option value="TEST">INVALIDSTRING</option>
     <option value="">EMPTYSTRING</option>
     </select>         <br />
     <INPUT type="button" value="SetBidirectionalRedundancy" name="SetBidirectionalRedundancy" onClick="setbidirectionalredundancy();"> 
         <br />
     <label for="txtbeamWidth" class="itemLabel">beamWidth</label>
     <input type="text" id="txtbeamWidth" name="txtbeamWidth" class="itemValue"  />   
     <INPUT type="button" value="SetbeamWidth" name="SetbeamWidth" onClick="setbeamWidth();"> 
      <br />
     <label for="txtconnectionidletimeout" class="itemLabel">connectiondletimeout</label>
     <input type="text" id="txtconnectionidletimeout" name="txtconnectionidletimeout" class="itemValue"  />   
       <INPUT type="button" value="SetConnectionIdleTimeout" name="SetConnectionIdleTimeout" onClick="setconnectionidletimeout();"> 
       <br />
     <label for="selectdisconnectbtondisable">Select disconnectbtondisable</label>
     <select name="selectdisconnectbtondisable" id="selectdisconnectbtondisable">
     <option value="true">true</option>
     <option value="false">false</option>
     <option value="TEST">INVALIDSTRING</option>
     <option value="">EMPTYSTRING</option>
     </select> <br />
   <INPUT type="button" value="SetDisconnectBTOnDisable" name="SetDisconnectBTOnDisable" onClick="setdisconnectbtondisable();"> 
       <br />
   <label for="selectBtAddressBarcodeOnEnable">Select BtAddressBarcodeOnEnable</label>
            <select name="selectBtAddressBarcodeOnEnable" id="selectBtAddressBarcodeOnEnable">
            <option value="true">true</option>
            <option value="false">false</option>
            <option value="TEST">INVALIDSTRING</option>
            <option value="">EMPTYSTRING</option>
            </select> <br />
   <INPUT type="button" value="setBtAddressBarcodeOnEnable" name="setBtAddressBarcodeOnEnable" onClick="SetdisplayBtAddressBarcodeOnEnable();">
   <br />
   <label for="txtenableTimeout" class="itemLabel">enableTimeout</label>
          <input type="text" id="txtenableTimeout" name="txtenableTimeout" class="itemValue"  />   
    <INPUT type="button" value="SetenableTimeout" name="SetenableTimeout" onClick="setenableTimeout();"> 
            <br />
    <label for="selectbarcodeDataFormat">Select barcodeDataFormat</label>
            <select name="selectbarcodeDataFormat" id="selectbarcodeDataFormat">
            <option value="text">text</option>
            <option value="binary">binary</option>
            <option value="TEST">INVALIDSTRING</option>
            <option value="">EMPTYSTRING</option>
            </select> <br />
     <INPUT type="button" value="SetbarcodeDataFormat" name="SetbarcodeDataFormat" onClick="setbarcodeDataFormat();">
              <br />
     <label for="txtdataBufferSize" class="itemLabel">dataBufferSize</label>
     <input type="text" id="txtdataBufferSize" name="txtdataBufferSize" class="itemValue"  />   
     <INPUT type="button" value="SetdataBufferSize" name="SetdataBufferSize" onClick="setdataBufferSize();">
              <br />     
      <label for="selectSetAllDecoders">Select AllDecoder</label>
              <select name="selectSetAllDecoders" id="selectSetAllDecoders">
              <option value="Enabled">Enabled</option>
              <option value="Disabled">Disabled</option>
              </select> <br /> 
      <INPUT type="button" value="SetAllDecoders" name="SetAllDecoders" onClick="setAllDecoders();">
                  <br />       
     <label for="selectEnablesignature">Select Enablesignature</label>
              <select name="selectEnablesignature" id="selectEnablesignature">
              <option value="Enabled">Enabled</option>
              <option value="Disabled">Disabled</option>
              <option value="TEST">INVALIDSTRING</option>
              <option value="">EMPTYSTRING</option>
              </select> <br />
     <INPUT type="button" value="EnableSignature" name="EnableSignature" onClick="enableSignature();">
                <br />  
              <label for="txtsignatureImageHeight" class="itemLabel">signatureImageHeight</label>
              <input type="text" id="txtsignatureImageHeight" name="txtsignatureImageHeight" class="itemValue"  />   
     <INPUT type="button" value="SetsignatureImageHeight" name="SetsignatureImageHeight" onClick="setsignatureImageHeight();">
                <br />   
                <label for="txtsignatureImageWidth" class="itemLabel">signatureImageWidth</label>
     <input type="text" id="txtsignatureImageWidth" name="txtsignatureImageWidth" class="itemValue"  />   
     <INPUT type="button" value="SetsignatureImageWidth" name="SetsignatureImageWidth" onClick="setsignatureImageWidth();">
                  <br /> 
                  <label for="txtsignatureImageQuality" class="itemLabel">signatureImageQuality</label>
      <input type="text" id="txtsignatureImageQuality" name="txtsignatureImageQuality" class="itemValue"  />   
      <INPUT type="button" value="SetsignatureImageQuality" name="SetsignatureImageQuality" onClick="setsignatureImageQuality();">
                    <br />
</form>
</body>
</html>

