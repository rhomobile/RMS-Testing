describe('Developer Experience - Build live update Functionality Test', function() {
    it("Should search and register all the subscribers connected to the server", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:discovery command");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("From project root folder run command rake dev:discovery[%Subnet_IP_address%] (eg: 192.168.6.1).");
        spec.addExpectation("In dev-config.yml it should register all the available subscribers with {\'jsonrpc\': \'2.0\', \'ip\': \'192.168.1.102\', \'port\': \'37579\', \'deviceName\': \'macbook-pro\', \'applicationName\': \'BundleReplace\', \'platform\': \'APPLE\' } format");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update modified html file on applying oneTime update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking oneTime update by modifying html file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Modify HTMLof app and publicfolder and apply oneTime update. </p> to html file.");
        spec.addStep("Call rake dev:update:onetime");
        spec.addExpectation("Command should detect changed files, builds full bundle update since it is updating for the first time after the application was launched and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update modified JS file on applying oneTime update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking oneTime update by modifying JS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test alert for onetime update\")}");
        spec.addStep("Call rake dev:update:onetime");
        spec.addStep("Call the alertTest funtion from html after successfull update");
        spec.addExpectation("Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen. alert should be displayed on calling alertTest function");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update modified CSS file on applying oneTime update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking oneTime update by modifying CSS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addStep("Call rake dev:update:onetime");
        spec.addExpectation("Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen. background-color red should be applied to page.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update modified Ruby file on applying oneTime update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking oneTime update by modifying Ruby file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test alert for onetime update\";<br/> end");
        spec.addStep("Call rake dev:update:onetime");
        spec.addStep("Click on show popup.");
        spec.addExpectation("Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated, popup should be displayed on calling show popup function.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying HTML files", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by modifying HTML file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition(" To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Apply with Auto update and Modify HTML files of app and publicfolder </p> to html file which is a home page.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified paragraph content should be seen.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update  in all registered subscribers on Modifying JS files", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by modifying JS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test alert for onetime update\")}");
        spec.addStep("Call alert function from html file.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated.");
        spec.addExpectation("Alert should be displayed");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying CSS file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by modifying CSS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen with background-color as red");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying ruby files", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by modifying Ruby file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test alert for onetime update\";<br/> end");
        spec.addStep("Call rake dev:update:onetime");
        spec.addStep("Click on show popup.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and popup should be displayed on calling show popup");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Adding new model to project", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by Adding new model");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add a model by using the format rhodes model newmodel test1 test2 test3.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and new model should be added.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on adding new html files to project.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by Adding new html files");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add an HTML file named auto_html.html .");
        spec.addStep("Click on the link open new file.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once.");
        spec.addExpectation("HTML file should be added and a page should be openend on clicking the link.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on adding new js files to project.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by Adding new JS files");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add js file named auto_js.js.<br/> function alertTest() { alert(\"Test alert for auto update\")}");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("js file should be added and on caling AlertTest function alert should be displayed");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on adding new CSS files to project.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by Adding new CSS files");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add a css file named auto_css.css.<br/>#pid {background-color:red}");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("css file should be added and background-color should be changed to red");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on adding new ruby files to project.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by Adding new Ruby file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add a ruby file named pageadded.erb .");
        spec.addStep("Click on the link open added file.");
        spec.addStep("Add an image file named pageimage.erb");
        spec.addStep("Click on the link open page with image.");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test alert for onetime update\";<br/> end");
        spec.addStep("Click on show popup.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Image and ruby files should be added and should be displayed.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update  in all registered subscribers on Deleting HTML, JS, CSS files from project", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate by Deleting HTML, JS, CSS files from project");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Delete one html file named del_auto_html.html");
        spec.addStep("Delete one js file named del_auto_js.js");
        spec.addStep("Delete one css file named del_auto_css.css.");
        spec.addStep("delete one ruby file named pageremoved.erb.");
        spec.addStep("Click on the link open page removed.");
        spec.addStep("Click on the link open deleted page.");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Modified content should be seen and no page should be opened on clicking the link.");
        spec.addExpectation("Should return http://server_ip:port/responce_from_device?&status=ok&ip=1.1.1.1 on server.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should return an error message on Modifying project files when device is switched off", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate when device is switched off");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Switch off the device.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Apply auto update and Modify files when device is switched off.</p> to html file.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test Alert auto update when device is switched off\")}");
        spec.addStep("Add css styling to css file #pid {background-color:#00ff00}");
        spec.addStep("Add below links to<%= link_to \'[Apply auto update and Modify files when device is switched off.]\', {:action => :show_popup }%> ");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test Alert auto update when device is switched off\";<br/> end");
        spec.addExpectation("Returns the error http://server_ip:port/responce_from_device?&status=error&message=blablabla&ip=1.1.1.1 and no update happens");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should return an error message on modifying project files when application was terminated", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate when application was terminated");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Terminate the application on the device.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Apply auto update and Modify files when application was terminated</p> to html file.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test auto update when application is terminated\")}");
        spec.addStep("Add css styling to css file #pid {background-color:re#0000ff}");
        spec.addStep("Add below links to<%= link_to \'[Apply auto update and Modify files when application was terminated]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test auto update when application is terminated\";<br/> end");
        spec.addExpectation("Returns the error http://server_ip:port/responce_from_device?&status=error&message=blablabla&ip=1.1.1.1 and no update happens");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should return error message on modifying project files when application was terminated followed by full bundle update on relaunching application", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking full bundle update on relaunching application");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("<br/> 1.Terminate the application on the device.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">apply Auto update and add files when application was terminated and relaunch application</p> to html file.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test auto update when application is terminated and relaunched\")}");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addStep("Add below links to<%= link_to \'[apply Auto update and add files when application was terminated and relaunch application]\', {:action => :show_popup }%> ");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test auto update when application is terminated and relaunched\";<br/> end");
        spec.addStep("Relaunch the application.");
        spec.addExpectation("Returns the error http://server_ip:port/responce_from_device?&status=error&message=blablabla&ip=1.1.1.1 and no update happens.<br/> On relaunching the application should notify for full bundle update with below message http://server_ip:port/responce_from_device?&status=need_full_update&ip=1.1.1.1<br/> which is followed by full bundle update on the device.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should return error message on adding files to project when no network avaiable", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate when no network avaiable");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("<br/> 1.Disable network connection on the device.");
        spec.addStep("Add an HTML file named auto_html.html .");
        spec.addStep("Add a JS file named auto_js.js.");
        spec.addStep("Add a CSS file named auto_css.css.");
        spec.addStep("Add a ruby file named pageadded.erb");
        spec.addStep("Add image file named pageimage.erb");
        spec.addStep("Click on the link open new file.");
        spec.addStep("Click on the file open added page.");
        spec.addStep("Click on the link open image page.");
        spec.addExpectation("Returns the error http://server_ip:port/responce_from_device?&status=error&message=blablabla&ip=1.1.1.1 and no update happens.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("External file watcher grunt should detect changes on updating html file and call rake dev:update:renameMe", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:update:renameMe from modified files list");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("Use an external file watcher grunt. ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Calling rake dev:update:renameMe by using external file watcher grunt</p> to html file.");
        spec.addStep("Call rake dev:update:renameMe");
        spec.addExpectation("External watcher should detect source code changes, and it should create files with list of changes.<br/> List of changed files is stored in two files:<br/> upgrade_package_add_files.txt<br/> upgrade_package_remove_files.txt<br/> Command should detect changed files, builds partial bundle update and sends notification to subscribers once. Automatically page should be updated and modified content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("External file watcher grunt should detect added JS file and call rake dev:update:renameMe", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:update:renameMe from added files list");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("Use an external file watcher grunt. ");
        spec.addStep("Add js file named auto_js.js with<br/> function alertTest() { alert(\"Test alert for auto update\")}");
        spec.addStep("Call rake dev:update:renameMe");
        spec.addExpectation("External watcher should detect source code changes, and it should create files with list of changes.<br/> List of changed files is stored in two files:<br/> upgrade_package_add_files.txt<br/> upgrade_package_remove_files.txt<br/> Command should detect changed files, builds partial bundle update and sends notification to subscribers once. Automatically page should be updated and modified content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("External file watcher grunt should detect deleted JS file and call rake dev:update:renameMe", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:update:renameMe from deleted files list");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("Use an external file watcher grunt. ");
        spec.addStep("<br/> 1Delete js file named auto_js.js ");
        spec.addStep("Call rake dev:update:renameMe");
        spec.addExpectation("External watcher should detect source code changes, and it should create files with list of changes.<br/> List of changed files is stored in two files:<br/> upgrade_package_add_files.txt<br/> upgrade_package_remove_files.txt<br/> Command should detect changed files, builds partial bundle update and sends notification to subscribers once. Automatically page should be updated and modified content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("External file watcher grunt should detect changes on updating CSS file and call rake dev:update:renameMe", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:update:renameMe from modified files list");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("Use an external file watcher grunt. ");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addStep("Call rake dev:update:renameMe");
        spec.addExpectation("External watcher should detect source code changes, and it should create files with list of changes.<br/> List of changed files is stored in two files:<br/> upgrade_package_add_files.txt<br/> upgrade_package_remove_files.txt<br/> Command should detect changed files, builds partial bundle update and sends notification to subscribers once. Automatically page should be updated and modified content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("External file watcher grunt should detect changes on updating Ruby file and call rake dev:update:renameMe", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:update:renameMe from modified files list");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("Use an external file watcher grunt. ");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test alert for onetime update\";<br/> end");
        spec.addStep("Call rake dev:update:renameMe");
        spec.addStep("Click on show popup.");
        spec.addExpectation("External watcher should detect source code changes, and it should create files with list of changes.<br/> List of changed files is stored in two files:<br/> upgrade_package_add_files.txt<br/> upgrade_package_remove_files.txt<br/> Command should detect changed files, builds partial bundle update and sends notification to subscribers once. Automatically page should be updated and modified content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("External file watcher grunt should detect changes in scss file and update in css file and call rake dev:update:renameMe", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:update:renameMe from modified files list");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("Use an external file watcher grunt. ");
        spec.addStep("Add a style.scss file.");
        spec.addStep("Call grunt command grunt watch");
        spec.addStep("Add css styling to scss file #pid {background-color:brown}");
        spec.addStep("Call rake dev:update:renameMe");
        spec.addExpectation("External watcher should detect source code changes, and it should create files with list of changes.<br/> List of changed files is stored in two files:<br/> upgrade_package_add_files.txt<br/> upgrade_package_remove_files.txt<br/> Command should detect changed files, builds partial bundle update and sends notification to subscribers once. Automatically page should be updated and modified content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update all subscribers on changing source code of (images, HTML, JS, CSS and ruby files) when registered manually on dev-config.yml", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking autoupdate when registered manually on dev-config.yml");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("Register the subscribers manually on the server by editing in dev-config.yml using the following format { uri: 192.168.1.102:37579<br/>  name: macbook-pro<br/>  platform: APPLE<br/>  application: ReloadBundle}");
        spec.addStep("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Register manually subscribers on server and change source code of (images, HTML, JS, CSS and ruby files) and apply with auto update.</p> to html file.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test auto update when subscribers are registered manually\")}");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addStep("Add below links to<%= link_to \'[Register manually subscribers on server]\', {:action => :show_popup }%> ");
        spec.addStep(" Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test auto update when subscribers are registered manually\";<br/> end");
        spec.addExpectation("The subscribers should be successfully registered.<br/> The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update application content (images, HTML, JS, CSS and ruby files) when built from Rhohub with extension “Development”.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking autoupdate when built from Rhohub with extension “Development”.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Build the testapp with \'development\' extension on RhoHub for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Update application content (images, HTML, JS, CSS and ruby files) with extension “Development” on RhoHub and apply with auto update..</p> to html file which is a home page.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test autoupdate with extension development on rhohub\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below links to<%= link_to \'[with extension “Development” on RhoHub and apply with auto update]\', {:action => :show_popup }%> ");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test autoupdate with extension development on rhohub\";<br/> end");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update application content (images, HTML, JS, CSS and ruby files) when built from containers on local computer with extension “Development”.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking autoupdate when built from containers on local computer with extension “Development”.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Build the testapp with \'development\' extension from containers on local computer for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition(" To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Update application content (images, HTML, JS, CSS and ruby files) with extension “Development” from containers on local computer and apply with auto update..</p> to html file which is a home page.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test with extension development from prebuilt containers on local computers\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below links to<%= link_to \'[with extension “Development” from containers on local computer and apply with auto update.]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test with extension development from prebuilt containers on local computers\";<br/> end");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update application content (images, HTML, JS, CSS and ruby files) when built from prebuilt containers(Rhomobile / App Store / GitHub) with extension “Development”.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking autoupdate when built from prebuilt containers(Rhomobile / App Store / GitHub) with extension “Development”.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Build the testapp with \'development\' extension from prebuilt containers(Rhomobile / App Store / GitHub) for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Update application content (images, HTML, JS, CSS and ruby files) with extension “Development” from prebuilt containers(Rhomobile / App Store / GitHub) and apply with auto update.<br/> .</p> to html file which is a home page.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test with extension deveopment from prebuilt containers\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below links to<%= link_to \'[ with extension “Development” from prebuilt containers(Rhomobile / App Store / GitHub)]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test with extension deveopment from prebuilt containers\";<br/> end");
        spec.addExpectation("The auto update command launches file system monitoring process. Monitoring process detects changes in next folders:<br/> /app<br/> /public  If changes will be detected monitoring process launches rake command dev:update:onetime .Command should detect changed files, builds partial bundle update and sends notification to subscribers once. ");
        spec.addExpectation("Automatically page should be updated and modified content should be seen");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should discover all the devices in 1 second on rake dev:discovery with more than 10 devices", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:discovery performance");
        spec.addPrecondition("Connect more than 10 devices to server network.");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("Run command rake dev:discovery[%Subnet_IP_address%] (eg: 192.168.6.1).");
        spec.addExpectation("In dev-config.yml it should register all the available subscribers with {\'jsonrpc\': \'2.0\', \'ip\': \'192.168.1.102\', \'port\': \'37579\', \'deviceName\': \'macbook-pro\', \'applicationName\': \'BundleReplace\', \'platform\': \'APPLE\' } format.");
        spec.addExpectation("All the devices should be discovered in 1 second.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update in all the devices at once when more than10 devices connected.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking autoupdate when more than10 devices connected.");
        spec.addPrecondition("Connect more than 10 devices to server network.");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension from prebuilt containers(Rhomobile / App Store / GitHub) for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">autoupdate more than10 devices</p> to html file which is a home page.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test alert for more than 10 devices\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below links to<%= link_to \'[autoupdate more than10 devices]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test alert for more than 10 devices\";<br/> end");
        spec.addExpectation("All the devices should be updated.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Performance Check between partial and full bundle update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Performance Check between partial and full bundle update");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension from prebuilt containers(Rhomobile / App Store / GitHub) for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. <br/> ");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">first modification for performance check</p> to html file which is a home page.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Testalert for performance check b/w partial and full bundle update after 1st modification\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below links to<%= link_to \'[first modification for performance check]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Alert Displayed for performance check b/w partial and full bundle update after 1st modification\";<br/> end");
        spec.addStep("Call rake dev:update:onetime ");
        spec.addStep("Terminate the application on the device");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">second modification for performance check</p> to html file which is a home page.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Testalert for performance check b/w partial and full bundle update after 2st modification\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below links to<%= link_to \'[second modification for performance check]\', {:action => :show_popup }%> ");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Alert Displayed for performance check b/w partial and full bundle update after 2nd modification\";<br/> end");
        spec.addStep("Call rake dev:update:onetime .");
        spec.addStep("Relaunch the application on device");
        spec.addExpectation("Command should detect changed files, builds partial bundle update and sends notification to subscribers once. <br/>  Automatically page should be updated and modified content should be seen.<br/> When the update command is called the second time,error message is returned as<br/> http://server_ip:port/responce_from_device?&status=error&message=blablabla&ip=1.1.1.1 and no update happens.<br/> On relaunching the application the following message is displayed http://server_ip:port/responce_from_device?&status=need_full_update&ip=1.1.1.1<br/> which is followed by full bundle update on the device.<br/> the time taken for partial bundle update and full bundle update should be same.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Checking auto-disable of development extension with distribution build", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto-disable of development extension with distribution build");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("From project root folder run command rake dev:discovery[%Subnet_IP_address%] (eg: 192.168.6.1).");
        spec.addExpectation("Subscribers should not be discovered");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Checking auto-disable of development extension with distribution build when  registered manually on dev-config.yml", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto-disable of development extension with distribution build when  registered manually on dev-config.yml");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
		spec.addPrecondition("In local computer build the testapp with \'development\' extension for WM, CE, Android, IOS and WP8.");
		spec.addPrecondition("Install the application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
		spec.addPrecondition("Launch the testapp in all subscribers. ");
        spec.addStep("Register the subscribers manually on the server by editing in dev-config.yml using the following format { uri: 192.168.1.102:37579<br/>  name: macbook-pro<br/>  platform: APPLE<br/>  application: ReloadBundle}");
        spec.addStep("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Register manually subscribers on server and change source code of (images, HTML, JS, CSS and ruby files) and apply with auto update.</p> to html file.");
        spec.addStep("Add alert function to js file.<br/> function alertTest() { alert(\"Test auto update when subscribers are registered manually\")}");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addStep("Add below links to<%= link_to \'[Register manually subscribers on server]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb def show_popup<br/>  Alert.show_popup \"Test auto update when subscribers are registered manually\";<br/> end");
        spec.addExpectation("Returns the error http://server_ip:port/responce_from_device?&status=error&message=blablabla&ip=1.1.1.1 and no update happens.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
});
