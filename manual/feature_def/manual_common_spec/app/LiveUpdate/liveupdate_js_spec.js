describe('Developer Experience - Build live update Functionality Test', function() {
    it("Should search and register all the subscribers connected to the server", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking rake dev:discovery command");
        spec.addPrecondition("Connect the devices to server network.");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("From project root folder run command rake dev:discovery.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("In dev-config.yml it should register all the available subscribers with eg:<br/>devices:<br/>  uri: 192.168.1.102:37579<br/>  name: macbook-pro<br/>  platform: APPLE<br/>  application: ReloadBundleformat");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should detect changed HTML file, builds partial bundle update and sends notification on applying partial update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking partial bundle update by changing html file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("Add <p id=\'pid\' onClick=\"alertTest()\">Modified HTML file onetime update</p> to html file in app and pubic folder.");
        spec.addStep("Call rake dev:update:partial");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Should detect changed html file, builds partial bundle update and sends notification to subscriber.");
        spec.addExpectation("Modified HTML page should be displayed.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should detect changed JS file, builds partial bundle update and sends notification on applying  update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking partial bundle update by changing JS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Add refresh: on to dev-config.yml");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("Stop all servers and start webserver rake dev:webserver:start");
        spec.addStep("Add alert function to JS file. <br/>function alertTest() { alert(\"Test alert for onetime update\")} in app and pubic folder");
        spec.addStep("Call rake dev:update:partial.");
        spec.addStep("Call the alertTest funtion.");
        spec.addExpectation("Web server should be started.");
        spec.addExpectation("Should detect changed JS file, builds partial bundle update and sends notification  to subscriber.");
        spec.addExpectation("Automatic page refresh should happen and on calling alert function should display alert message.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should detect changed CSS file, builds partial bundle update and sends notification on applying update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking partial bundle update by changing CSS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Add refresh: off to dev-config.yml");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("Add CSS styling to css file #pid {background-color:red} in app and pubic folder.");
        spec.addStep("Call rake dev:update:partial.");
        spec.addStep("Manually refresh the page.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Should detect changed CSS file, builds partial bundle update and sends notification to subscriber.");
        spec.addExpectation("After manual refresh Background-color red should be applied.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should detect changed Ruby file, builds partial bundle update and sends notification on applying update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking partial bundle update by changing Ruby file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("Add below function to controller.rb in app folder<br/>def show_popup<br/>  Alert.show_popup \"Test alert for onetime update\";<br/>end");
        spec.addStep("Call rake dev:update:partial.");
        spec.addStep("Call show_popup function.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Should detect changed CSS file, builds partial bundle update and sends notification to subscriber.");
        spec.addExpectation("Popup should be displayed on calling show popup function.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying HTML files", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update by changing html file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\"> Auto update HTML files </p> to html file in app and public folder.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing HTML file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("Changed HTML content should be seen.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying JS files", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update by changing JS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Add refresh: off to dev-config.yml");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add alert function to JS file. <br/>function alertTest() { alert(\"Test alert for auto update\")} in app and pubic folder");
        spec.addStep("Reload the page.");
        spec.addStep("Call the alertTest funtion.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing JS file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("After manual refresh only alert message should be displayed.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying CSS file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update by changing CSS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Add refresh: on to dev-config.yml");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add CSS styling to css file #pid {background-color:green} in app and pubic folder.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing CSS file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("Page should be refreshed automatically and background-color green should be applied to page.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Modifying ruby files", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update by changing Ruby file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add below function to controller.rb in app folder<br/>def show_popup<br/>  Alert.show_popup \"Test alert for Auto update\";<br/>end");
        spec.addStep("Call show_popup function.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing Ruby file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("Popup should be displayed on calling show popup function.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Adding new model to project", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update on Adding new model to project");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add a model by using the command rhodes model newmodel test1 test2 test3.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing Ruby file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("New model should be added.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on adding new HTML, CSS, JS, image and Ruby files to project.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update on adding new HTML, CSS, JS and Ruby files to project.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add an HTML file named auto_html.html file with <br/>Head tag containing<br/><link rel=\"stylesheet\" type=\"text/css\" href=\"auto_css.css\"><br/><script src=\"auto_js.js\"></script> <br/>and body containig <br/><p onclick=\'alertTest();\'> Adding new HTML file </p> in app and public folder");
        spec.addStep("Add js file named auto_js.js in app and public folder.<br/>function alertTest() { alert(\"Added file auto update\")}");
        spec.addStep("Add a css file named auto_css.css in app and public folder.<br/>body {background-color: grey;font-size: 30px}");
        spec.addStep("Add below function to controller.rb in app folder. <br/>def show_popup<br/>Alert.show_popup \"Added file auto update\";<br/>end");
        spec.addStep("Add image file.");
        spec.addStep("Provide above added files link in application and load the added pages.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On adding HTML, CSS, JS and Ruby files monitoring process should run rake dev:update:partial.");
        spec.addStep("Added HTML, CSS, JS image and Ruby files should be loaded.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should Auto update in all registered subscribers on Deleting HTML, JS, CSS files from project", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto partial bundle update on Deleting HTML, JS, CSS files from project");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Delete html file del_auto_html.html in app and public folder");
        spec.addStep("Delete js file del_auto_js.js");
        spec.addStep("Delete css file del_auto_css.css.");
        spec.addStep("Delete ruby file pageremoved.erb.");
        spec.addStep("Open the deleted page");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On deleting HTML, CSS, JS and Ruby monitoring process should run rake dev:update:partial.");
        spec.addExpectation("HTML, CSS, JS and Ruby files should be deleted in all devices");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Full bundle update in all registered subscribers on adding new HTML, CSS, JS and Ruby files to project.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking Full bundle update on adding new HTML, CSS, JS and Ruby files to project.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers. <br/>");
        spec.addStep("Add an HTML file named auto_html.html file with <br/>Head tag containing<br/><link rel=\"stylesheet\" type=\"text/css\" href=\"auto_css.css\"><br/><script src=\"auto_js.js\"></script> <br/>and body containig <br/><p onclick=\'alertTest();\'> Adding new HTML file full bundle update</p> in app and public folder");
        spec.addStep("Add js file named auto_js.js in app and public folder.<br/>function alertTest() { alert(\"Added file full bundle update\")}");
        spec.addStep("Add a css file named auto_css.css in app and public folder.<br/>body {background-color: grey;font-size: 30px}");
        spec.addStep("Add below function to controller.rb in app folder. <br/>def show_popup<br/>Alert.show_popup \"Added file full bundle update\";<br/>end");
        spec.addStep("Add image file.");
        spec.addStep("Provide above added files link in application and load the added pages.");
        spec.addStep("Run rake dev:update:full");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Should detect changed HTML, CSS, Ruby and image files builds full bundle update and sends notification to subscriber.");
        spec.addExpectation("Modified HTML page should be displayed");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should return an error message on Modifying project files when device is switched off", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate when device is switched off");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Switch off the device.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Apply auto update and Modify files when device is switched off.</p> to html file.");
        spec.addStep("Add alert function to js file in app and publid folder.<br/>function alertTest() { alert(\"Test Alert auto update when device is switched off\")}");
        spec.addStep("Add css styling to css file #pid {background-color:#00ff00}");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On modifying files monitoring process should run rake dev:update:partial.");
        spec.addExpectation("\'subcriber notify…failed\' at web-server terminal window");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should return an error message on modifying project files when application was terminated", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking AutoUpdate when application was terminated");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Terminate the application on the device.");
        spec.addStep("Add below links to<%= link_to \'[Apply auto update and Modify files when application was terminated]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb <br/>def show_popup<br/>  Alert.show_popup \"Test auto update when application is terminated\";<br/>end");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On modifying files monitoring process should run rake dev:update:partial.");
        spec.addExpectation("\'subcriber notify…failed\'  at web-server terminal window");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Full bundle update after application termiated and relaunched.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Full bundle update after application termiated and relaunched.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto ");
        spec.addStep("Terminate the applications in all devices.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">apply Auto update and add files when application was terminated and relaunch application</p> to html file.");
        spec.addStep("Add alert function to js file.<br/>function alertTest() { alert(\"Test auto update when application is terminated and relaunched\")}");
        spec.addStep("Add below links to<%= link_to \'[apply Auto update and add files when application was terminated and relaunch application]\', {:action => :show_popup }%>");
        spec.addStep("Add below function to controller.rb <br/>def show_popup<br/>Alert.show_popup \"Test auto update when application is terminated and relaunched\";<br/>end");
        spec.addStep("Relaunch the application.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On modifying files monitoring process should run rake dev:update:partial.");
        spec.addExpectation("Should display the error when application is terminated");
        spec.addExpectation("On relaunching modified HTML page and popup should be displayed.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Adding files to project when network is not avaiable and full bundle update once the network is available", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking full bundle update once the network is available");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers. <br/>");
        spec.addStep("Disable network connection on the device.");
        spec.addStep("Add HTML, CSS, JS, erb and image files to project.");
        spec.addStep("Run rake dev:update:partial.");
        spec.addStep("After getting error message, Enable network on devices.");
        spec.addStep("Run rake dev:update:partial.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("If app sends request to server for full update and server automatically build full update");
        spec.addExpectation("Modified HTML page and popup should be displayed");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Using External file watcher grunt to detect changes in HTML file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Using External file watcher grunt to detect changes in HTML file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.<br/>");
        spec.addPrecondition("Run external file watcher grunt.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Using external file watcher grunt</p> to html file in app folder.");
        spec.addStep("Call rake dev:update:build_and_notify");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("External watcher should detect source code changes and should create list of changed files list in <br/>upgrade_package_add_files.txt");
        spec.addExpectation("Command should detect changed HTML files, builds partial bundle update and sends notification to subscribers once. ");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Using External file watcher grunt to detect added JS file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Using External file watcher grunt to detect added JS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.<br/>");
        spec.addPrecondition("Run external file watcher grunt.");
        spec.addStep("<br/>1.Add js file named auto_js.js with<br/>function alertTest() { alert(\"Test alert for auto update\")}");
        spec.addStep("Call rake dev:update:build_and_notify");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("External watcher should detect added file and should create list of added files list in <br/>upgrade_package_add_files.txt");
        spec.addExpectation("Command should detect added JS files, builds partial bundle update and sends notification to subscribers once. ");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Using External file watcher grunt to detect deleted JS file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Using External file watcher grunt to detect deleted JS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.<br/>");
        spec.addPrecondition("Run external file watcher grunt.");
        spec.addStep("Delete js file named auto_js.js ");
        spec.addStep("Call rake dev:update:build_and_notify");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("External watcher should detect deleted files and should create deletes list of files in <br/>upgrade_package_remove_files.txt");
        spec.addExpectation("Command should detect deleted JS files, builds partial bundle update and sends notification to subscribers once.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Using External file watcher grunt to detect changes in CSS file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Using External file watcher grunt to detect changes in CSS file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.<br/>");
        spec.addPrecondition("Run external file watcher grunt.");
        spec.addStep("Add css styling to css file #pid {background-color:red}");
        spec.addStep("Call rake dev:update:build_and_notify");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("External watcher should detect source code changes and should create list of changed files list in <br/>upgrade_package_add_files.txt");
        spec.addExpectation("Command should detect changed CSS files, builds partial bundle update and sends notification to subscribers once. ");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Using External file watcher grunt to detect changes in Ruby file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Using External file watcher grunt to detect changes in Ruby file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.<br/>");
        spec.addPrecondition("Run external file watcher grunt. ");
        spec.addStep("Add below function to controller.rb def show_popup<br/> Alert.show_popup \"Test alert for onetime update\";<br/> end");
        spec.addStep("Call rake dev:update:build_and_notify");
        spec.addStep("Click on show popup.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("External watcher should detect source code changes and should create list of changed files list in <br/>upgrade_package_add_files.txt");
        spec.addExpectation("Command should detect changed Ruby files, builds partial bundle update and sends notification to subscribers once. ");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Using External file watcher grunt to detect changes in scss file and update in css file", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Using External file watcher grunt to detect changes in scss file and update in css file");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.<br/>");
        spec.addPrecondition("Run external file watcher grunt. ");
        spec.addStep("Add a style.scss file.");
        spec.addStep("Add css styling to scss file #pid {background-color:brown}");
        spec.addStep("Call rake dev:update:build_and_notify");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("External watcher should detect source code changes and should create list of changed files list in <br/>upgrade_package_add_files.txt");
        spec.addExpectation("Command should detect changed CSS files, builds partial bundle update and sends notification to subscribers once.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update all subscribers on changing images, HTML, JS, CSS and ruby files when registered manually on dev-config.yml", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking update when registered manually on dev-config.yml");
        spec.addPrecondition("Connect the devices to server network.");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("Register the subscribers manually on the server by editing in dev-config.yml in the following format<br/>uri: 192.168.1.102:37579<br/>name: macbook-pro<br/>platform: APPLE<br/>application: ReloadBundleformat");
        spec.addStep("Run command rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Register manually subscribers on server.</p> to html file in app and public folder.");
        spec.addStep("Add below function to controller.rb and provide link<br/>def show_popup<br/>  Alert.show_popup \"Test auto update when subscribers are registered manually\";<br/>end");
        spec.addStep("Add image file.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing HTML and Ruby file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("On refreshing should display Modified HTML page.");
        spec.addExpectation("Should display popup on caling popup/alert function");
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update all subscribers on changing images, HTML, JS, CSS and ruby files when built from Rhohub.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking update when built from Rhohub.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Build the aplication with \'development\' extension on RhoHub for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addPrecondition("Rhohub repository should be cloned to desktop");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">RhoHub with auto update..</p> to html file in App and public folder.");
        spec.addStep("Add alert function to js file.<br/>function alertTest() { alert(\"Test autoupdate with extension development on rhohub\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below function to controller.rb def show_popup<br/>Alert.show_popup \"Test autoupdate with extension development on rhohub\";<br/>end");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing HTML and Ruby file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("On refreshing should display Modified HTML page.");
        spec.addExpectation("Should display popup on caling popup/alert function");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update all subscribers on changing images, HTML, JS, CSS and ruby files when built from Containers.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking update when built from Containers.");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Build the aplication with \'development\' extension on Containers for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Containers with auto update.</p> to html file in App and public folder.");
        spec.addStep("Add alert function to js file.<br/>function alertTest() { alert(\"Test autoupdate with extension development on Containers\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below function to controller.rb def show_popup<br/>Alert.show_popup \"Test autoupdate with extension development on Containers\";<br/>end");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing HTML and Ruby file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("On refreshing should display Modified HTML page.");
        spec.addExpectation("Should display popup on caling popup/alert function");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should update all subscribers on changing images, HTML, JS, CSS and ruby files when built from prebuilt containers(Rhomobile / App Store / GitHub).", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking update when built from prebuilt containers(Rhomobile / App Store / GitHub).");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("Build the aplication with \'development\' extension on Prebuilt Containers for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Prebuilt Containers with auto update.</p> to html file in App and public folder.");
        spec.addStep("Add alert function to js file.<br/>function alertTest() { alert(\"Test autoupdate with extension development on Prebuilt Containers\")}");
        spec.addStep("Add css styling to css file #pid {backgroung-color:red}");
        spec.addStep("Add below function to controller.rb def show_popup<br/>Alert.show_popup \"Test autoupdate with extension development on Prebuilt Containers\";<br/>end");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("The auto update command should launch file system monitoring process. On changing HTML and Ruby file monitoring process should run rake dev:update:partial.");
        spec.addExpectation("On refreshing should display Modified HTML page.");
        spec.addExpectation("Should display popup on caling popup/alert function");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Discovery timeout performance", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking discovery timeout performance");
        spec.addPrecondition("Connect more than 10 devices to server network.");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addStep("Run command rake dev:discovery.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("In dev-config.yml it should register all the available subscribers with eg:<br/>devices:<br/>  uri: 192.168.1.102:37579<br/>  name: macbook-pro<br/>  platform: APPLE<br/>  application: ReloadBundle");
        spec.addExpectation("In MAC discovery timeout should happen in 5 sec");
        spec.addExpectation("In Windows discovery timeout should happen in 21 sec");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Modified files should get updated in all the devices at once for than 10 devices connected.", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking update to all devices performance");
        spec.addPrecondition("Connect more than 10 devices to server network.");
        spec.addPrecondition("Add refresh: on to dev-config.yml");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addPrecondition("To Apply auto update run command rake dev:update:auto");
        spec.addStep("Add below function to controller.rb and call on page refresh<br/>def show_popup<br/>Alert.show_popup \"Test alert for more than 10 devices\";<br/>end");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Changed files should be applied to all connected devices at once in parallel.");
        spec.addExpectation("Same time popup should be displayed in all devices");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Performance Check between partial and full bundle update", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Performance Check between partial and full bundle update");
        spec.addPrecondition("Connect devices to server network.");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers. <br/>");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">first modification for performance check</p> to html file.");
        spec.addStep("Call rake dev:update:partial. Check time.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">second modification for performance check</p> to html file.");
        spec.addStep("Call rake dev:update:full. Check time.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("partial bundle update should be faster than full bundle update");
        spec.addExpectation("Time difference will be depending upon pla and devices used.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Performance Check of full bundle update with without clean", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Performance Check between partial and full bundle update");
        spec.addPrecondition("Connect devices to server network.");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers. <br/>");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">first modification full bundle update performance check</p> to html file.");
        spec.addStep("Call rake dev:update:full. Check time.");
        spec.addStep("Call rake clean: platform.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">second full bundle update performance check</p> to html file.");
        spec.addStep("Call rake dev:update:full. Check time.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Third full bundle update performance check</p> to html file.");
        spec.addStep("Call rake dev:update:full. Check time.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Full bundle update without clean performance should be better");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Checking auto-disable of development extension with distribution build", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto-disable of development extension with distribution build");
        spec.addPrecondition("Connect devices to server network.");
        spec.addPrecondition("In local computer build the distribution application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addStep("From project root folder run command rake dev:discovery.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Distribution applications should not be discovered .");
        spec.addExpectation("It should discover only Relase/debug build.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Checking discovery without \'development\' extension", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking discovery without \'development\' extension");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server.");
        spec.addPrecondition("In local computer build the application without \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addStep("From project root folder run command rake dev:discovery.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Subscribers without development extension should not be discovered");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Checking discovery without network", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking discovery without network");
        spec.addPrecondition("Server should not be connected in any network");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS, Android Simulator, and IOS simulator)");
        spec.addPrecondition("Launch the aplication all subscribers.");
        spec.addStep("From project root folder run command rake dev:discovery.");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("There should not be any abnormal behavior. Shoud display proper error message");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Start webserver, apply update and stop webserver", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking webserver start and stop command");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("Stop all webservers.");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Webserver test </p> to html file in app and public folder.");
        spec.addStep("Start the webserver by rake dev:webserver:start");
        spec.addStep("Call rake dev:update:partial");
        spec.addStep("Stop the webserver by rake dev:webserver:stop");
        spec.addExpectation("Webserver should be started succesfully.");
        spec.addExpectation("On running update command changed HTML file should be applied to subscriber.");
        spec.addExpectation("It should not start one more server in background.");
        spec.addExpectation("Webserver should be stopped succesfully");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });

    it("Checking auto update on webserver restart", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking auto update on webserver restart");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addPrecondition("Stop all webservers.");
        spec.addStep("Call rake dev:update:auto");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Webserver started </p> to html file in app and public folder.");
        spec.addStep("Stop the webserver by rake dev:webserver:stop");
        spec.addStep("Add paragraph tag <p id=\'pid\' onClick=\"alertTest()\">Webserver Stopped </p> to html file in app and public folder.");
        spec.addStep("restart the webserver by rake dev:webserver:start");
        spec.addExpectation("Webserver should be started succesfully.");
        spec.addExpectation("Once the webserver is stopped any update should be failed");
        spec.addExpectation("Once the webserver is restarted changed html file should be applied.");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });

    it("Should not apply changes made in public/api folder", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Should not apply changes made in public/api folder");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("Add HTML, CSS, JS files to public/api folder and provide link in home page");
        spec.addStep("Add alert function rho-api.js file in public/api folder");
        spec.addStep("Run rake dev:update:partial.");
        spec.addStep("Try to open the link and call alert function");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Should not apply changes made in public/api folder");
        spec.addExpectation("HTML link and alert function should not work");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });
    it("Should not apply changes made other than app and public folder", function() {
        var spec = new ManualSpec(jasmine, window.document);
        spec.addGoal("Checking application update other than app and public folder");
        spec.addPrecondition("Connect the devices to server network and Register subscribers on server");
        spec.addPrecondition("In local computer build the application with \'development\' extension for all platforms.");
        spec.addPrecondition("Install the  application on all subscribers (WM, CE, Android, IOS and WP8, Android Simulator, WP8 simulator and IOS simulator)");
        spec.addPrecondition("Launch the application in all subscribers.");
        spec.addStep("Add HTML, CSS, JS files to root folder and provide link in home page");
        spec.addStep("Add one extension(audiocapture) in build.yml");
        spec.addStep("Change start page in rhoconfig.txt");
        spec.addStep("Run rake dev:update:partial.");
        spec.addStep("Check the HTML links added working or not, Check audiocapture function");
        spec.addExpectation("Web server should be started if not running");
        spec.addExpectation("Should not apply changes made other than app and public folder");
        spec.addExpectation("Start page should not be changed");
        spec.addExpectation("audiocapture should not work");
        spec.displayScenario();
        spec.waitForButtonPressing("Run test");
        spec.waitForResponse();
    });

});